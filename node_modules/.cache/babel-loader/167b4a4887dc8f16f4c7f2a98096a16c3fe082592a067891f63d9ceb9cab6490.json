{"ast":null,"code":"export const fetchProducts=async()=>{try{const response=await fetch('/products.json');if(!response.ok)throw new Error('Erro ao buscar produtos');const data=await response.json();console.log('Produtos carregados:',data.produtos);return data.produtos;}catch(error){console.error('Erro ao carregar produtos:',error);return[];}};","map":{"version":3,"names":["fetchProducts","response","fetch","ok","Error","data","json","console","log","produtos","error"],"sources":["C:/vitrine-clean/vitrine-econverse-teste/src/types/product.ts"],"sourcesContent":["  export interface Product {\r\n    id: string;\r\n    productName: string;\r\n    descriptionShort: string;\r\n    photo: string;\r\n    price: number;\r\n  }\r\n\r\nexport const fetchProducts = async (): Promise<Product[]> => {\r\n  try {\r\n    const response = await fetch('/products.json');\r\n    if (!response.ok) throw new Error('Erro ao buscar produtos');\r\n    const data = await response.json();\r\n    console.log('Produtos carregados:', data.produtos);\r\n\r\n    return data.produtos;\r\n  } catch (error) {\r\n    console.error('Erro ao carregar produtos:', error);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"AAQA,MAAO,MAAM,CAAAA,aAAa,CAAG,KAAAA,CAAA,GAAgC,CAC3D,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,gBAAgB,CAAC,CAC9C,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,KAAM,IAAI,CAAAC,KAAK,CAAC,yBAAyB,CAAC,CAC5D,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClCC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAEH,IAAI,CAACI,QAAQ,CAAC,CAElD,MAAO,CAAAJ,IAAI,CAACI,QAAQ,CACtB,CAAE,MAAOC,KAAK,CAAE,CACdH,OAAO,CAACG,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,MAAO,EAAE,CACX,CACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}