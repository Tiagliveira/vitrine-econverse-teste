{"ast":null,"code":"export const fetchProducts = async () => {\n  try {\n    const response = await fetch('/products.json');\n    if (!response.ok) throw new Error('Erro ao buscar produtos');\n    const data = await response.json();\n    console.log('Produtos carregados:', data.produtos);\n    return data.produtos;\n  } catch (error) {\n    console.error('Erro ao carregar produtos:', error);\n    return [];\n  }\n};","map":{"version":3,"names":["fetchProducts","response","fetch","ok","Error","data","json","console","log","produtos","error"],"sources":["C:/vitrine-clean/vitrine-econverse-teste/src/types/product.ts"],"sourcesContent":["  export interface Product {\r\n    id: string;\r\n    productName: string;\r\n    descriptionShort: string;\r\n    photo: string;\r\n    price: number;\r\n  }\r\n\r\nexport const fetchProducts = async (): Promise<Product[]> => {\r\n  try {\r\n    const response = await fetch('/products.json');\r\n    if (!response.ok) throw new Error('Erro ao buscar produtos');\r\n    const data = await response.json();\r\n    console.log('Produtos carregados:', data.produtos);\r\n\r\n    return data.produtos;\r\n  } catch (error) {\r\n    console.error('Erro ao carregar produtos:', error);\r\n    return [];\r\n  }\r\n};\r\n"],"mappings":"AAQA,OAAO,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAgC;EAC3D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,CAAC;IAC9C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5D,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEH,IAAI,CAACI,QAAQ,CAAC;IAElD,OAAOJ,IAAI,CAACI,QAAQ;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}